#setting up environment 
library(seqinr)    
library(ape)        
library(EnvNJ) 
library(phytools)
library(ggtree)
library(treeio)
library(ggpubr)
library(ggplot2)
library(BiocManager) 
library(GenomicRanges)
library(filesstrings)
library(dplyr)
library(stringr)

gb <- c('KX894508')           
seqs <- read.GenBank(gb, seq.names=gb, species.name=T, as.character=T) 
lsdv <- as.alignment(seqs)   
LSDV <- c(lsdv$seq)         
write.dna (LSDV, file="KX894508.fasta", format="fasta", append=F, nbcol=10, colsep="", colw=nchar(LSDV), indent = NULL)    

gb1 <- c('NC_004002.1')     
seqs1 <- read.GenBank(gb1, seq.names=gb1, species.name=T, as.character=T)
sppv <- as.alignment(seqs1)
SPPV <- c(sppv$seq)
write.dna (SPPV, file="NC_004002.1.fasta", format="fasta", append=F, nbcol=10, colsep="", colw=nchar(SPPV), indent = NULL)

gb2 <- c('NC_004003.1')      
seqs2 <- read.GenBank(gb2, seq.names=gb2, species.name=T, as.character=T)
gtpv <- as.alignment(seqs2)
GTPV <- c(gtpv$seq)
write.dna (GTPV, file="NC_004003.1.fasta", format="fasta", append=F, nbcol=10, colsep="", colw=nchar(GTPV), indent = NULL)

gb3 <- c('OQ511520')           
seqs3 <- read.GenBank(gb3, seq.names=gb3, species.name=T, as.character=T) 
lsdv1 <- as.alignment(seqs3)   
LSDV1 <- c(lsdv1$seq)         
write.dna (LSDV1, file="OQ511520.fasta", format="fasta", append=F, nbcol=10, colsep="", colw=nchar(LSDV1), indent = NULL)

gb4 <- c('KX764645')           
seqs4 <- read.GenBank(gb4, seq.names=gb4, species.name=T, as.character=T) 
lsdv2 <- as.alignment(seqs4)   
LSDV2 <- c(lsdv2$seq)         
write.dna (LSDV2, file="KX764645.fasta", format="fasta", append=F, nbcol=10, colsep="", colw=nchar(LSDV2), indent = NULL) 

fastaconc(otus=c('KX894508', 'KX764645', 'OQ511520', 'NC_004002.1', 'NC_004003.1'), out.file="./5.fasta")

#genbankr
ref <- genbankr::readGenBank("KX894508.gb")  #reading in gb ref file
genes(ref)    #gets the ranges, strands, and name of gene
cds(ref)     #more info - annotations, product, product id
g <- GRanges(genes(ref))                    #converts info into GRanges object
range <- data.frame(ranges(g[1:158]))      #reads in start, end and width of genes into a data frame
range[genenumber, 1:3]                  #pick a specific gene start, end and width

#R in unix from working@home
aln <- seqinr::read.fasta(file = "5aln.fasta", as.string = TRUE)  #read in aln file i had concatenated as a fasta file as string
aln_no <- seqinr::read.fasta(file = "5aln.fasta")   #read in aln file as a vector single characters
KX8 <- aln_no$KX8      #reads in only KX894508 vector seq
KX89 <- aln$KX89
KX76<- aln$KX76
OQ51 <- aln$OQ51
NC_004002 <- aln$NC_004002
NC_004003 <- aln$NC_004003

#counting loop function to determine cds start and end that uses the vector version of the file
LDrange <- function(x){
  s = range[x,1]
  counter = 0               
for (i in 1:1000000) {
  if(isTRUE(KX8[i] == "-")== TRUE) { 
    counter 
  }
  else {
    counter = counter + 1
  }
  if (counter == (s)) {
    print(i)
    start <- i
    assign("start", i, envir = .GlobalEnv)          #allows start to be called out to the global environment 
  }
}
   w = range[x,3]
  counter = 0               
for (k in start:1000000) {
  if(isTRUE(KX8[k] == "-")== TRUE) { 
    counter = counter + 0
  }
  else {
    counter = counter + 1
  }
  if (counter == (w)) {
    print(k)
    end <- k
    assign("end", k, envir = .GlobalEnv) 
  }
    }
}


#function following range determination that substrings coordinates to vector and generates fasta files 
LD <- function(x,e){
  if (x < 10 && e == "KX89") {
    var1 <- paste(c("LD00", x, "_",e), collapse = "") 
    var1a <- paste(c(var1, ".fasta"), collapse = "") 
    var1 <- substr (KX89, start, end)
     assign("var1", var1, envir = .GlobalEnv) 
    write.dna (var1, file=var1a, format="fasta", append=F, nbcol=10, colsep="", colw=nchar(var1), indent = NULL)
  }
  else if (x < 10 && e == "KX76"){
    var1 <- paste(c("LD00", x, "_",e), collapse = "") 
    var1a <- paste(c(var1, ".fasta"), collapse = "") 
    var1 <- substr (KX76, start, end)
     assign("var1", var1, envir = .GlobalEnv) 
    write.dna (var1, file=var1a, format="fasta", append=F, nbcol=10, colsep="", colw=nchar(var1), indent = NULL)
  }
   else if (x < 10 && e == "OQ51"){
    var1 <- paste(c("LD00", x, "_",e), collapse = "") 
    var1a <- paste(c(var1, ".fasta"), collapse = "") 
    var1 <- substr (OQ51, start, end)
     assign("var1", var1, envir = .GlobalEnv) 
    write.dna (var1, file=var1a, format="fasta", append=F, nbcol=10, colsep="", colw=nchar(var1), indent = NULL)
   }
   else if (x < 10 && e == "NC_004002"){
    var1 <- paste(c("LD00", x, "_",4002), collapse = "") 
    var1a <- paste(c(var1, ".fasta"), collapse = "") 
    var1 <- substr (NC_004002, start, end)
     assign("var1", var1, envir = .GlobalEnv) 
    write.dna (var1, file=var1a, format="fasta", append=F, nbcol=10, colsep="", colw=nchar(var1), indent = NULL)
   }
   else if (x < 10 && e == "NC_004003"){
    var1 <- paste(c("LD00", x, "_",4003), collapse = "") 
    var1a <- paste(c(var1, ".fasta"), collapse = "") 
    var1 <- substr (NC_004003, start, end)
     assign("var1", var1, envir = .GlobalEnv) 
    write.dna (var1, file=var1a, format="fasta", append=F, nbcol=10, colsep="", colw=nchar(var1), indent = NULL)
   }
  if (x >= 10 && x < 100 && e == "KX89") {
    var1 <- paste(c("LD0", x, "_", e), collapse = "") 
    var1a <- paste(c(var1, ".fasta"), collapse = "") 
    var1 <- substr (KX89, start, end)
     assign("var1", var1, envir = .GlobalEnv) 
    write.dna (var1, file=var1a, format="fasta", append=F, nbcol=10, colsep="", colw=nchar(var1), indent = NULL)
  }
  else if (x >= 10 && x < 100 && e == "KX76") {
    var1 <- paste(c("LD0", x, "_", e), collapse = "") 
    var1a <- paste(c(var1, ".fasta"), collapse = "") 
    var1 <- substr (KX76, start, end)
     assign("var1", var1, envir = .GlobalEnv) 
    write.dna (var1, file=var1a, format="fasta", append=F, nbcol=10, colsep="", colw=nchar(var1), indent = NULL)
  }
  else if (x >= 10 && x < 100 && e == "OQ51") {
    var1 <- paste(c("LD0", x, "_", e), collapse = "") 
    var1a <- paste(c(var1, ".fasta"), collapse = "") 
    var1 <- substr (OQ51, start, end)
     assign("var1", var1, envir = .GlobalEnv) 
    write.dna (var1, file=var1a, format="fasta", append=F, nbcol=10, colsep="", colw=nchar(var1), indent = NULL)
  }
  else if (x >= 10 && x < 100 && e == "NC_004002") {
    var1 <- paste(c("LD0", x, "_", 4002), collapse = "") 
    var1a <- paste(c(var1, ".fasta"), collapse = "") 
    var1 <- substr (NC_004002, start, end)
     assign("var1", var1, envir = .GlobalEnv) 
    write.dna (var1, file=var1a, format="fasta", append=F, nbcol=10, colsep="", colw=nchar(var1), indent = NULL)
  }
  else if (x >= 10 && x < 100 && e == "NC_004003") {
    var1 <- paste(c("LD0", x, "_", 4003), collapse = "") 
    var1a <- paste(c(var1, ".fasta"), collapse = "") 
    var1 <- substr (NC_004003, start, end)
     assign("var1", var1, envir = .GlobalEnv) 
    write.dna (var1, file=var1a, format="fasta", append=F, nbcol=10, colsep="", colw=nchar(var1), indent = NULL)
  }
  if (x >= 100 && e == "KX89") {
    var1 <- paste(c("LD", x, "_", e), collapse = "") 
    var1a <- paste(c(var1, ".fasta"), collapse = "") 
    var1 <- substr (KX89, start, end)
     assign("var1", var1, envir = .GlobalEnv) 
    write.dna (var1, file=var1a, format="fasta", append=F, nbcol=10, colsep="", colw=nchar(var1), indent = NULL)
  }
  else if (x >= 100 && e == "KX76") {
    var1 <- paste(c("LD", x, "_", e), collapse = "") 
    var1a <- paste(c(var1, ".fasta"), collapse = "") 
    var1 <- substr (KX76, start, end)
     assign("var1", var1, envir = .GlobalEnv) 
    write.dna (var1, file=var1a, format="fasta", append=F, nbcol=10, colsep="", colw=nchar(var1), indent = NULL)
  }
  else if (x >= 100 && e == "OQ51") {
    var1 <- paste(c("LD", x, "_", e), collapse = "") 
    var1a <- paste(c(var1, ".fasta"), collapse = "") 
    var1 <- substr (OQ51, start, end)
     assign("var1", var1, envir = .GlobalEnv) 
    write.dna (var1, file=var1a, format="fasta", append=F, nbcol=10, colsep="", colw=nchar(var1), indent = NULL)
  }
  else if (x >= 100 && e == "NC_004002") {
    var1 <- paste(c("LD", x, "_", 4002), collapse = "") 
    var1a <- paste(c(var1, ".fasta"), collapse = "") 
    var1 <- substr (NC_004002, start, end)
     assign("var1", var1, envir = .GlobalEnv) 
    write.dna (var1, file=var1a, format="fasta", append=F, nbcol=10, colsep="", colw=nchar(var1), indent = NULL)
  }
  else if (x >= 100 && e == "NC_004003") {
    var1 <- paste(c("LD", x, "_", 4003), collapse = "") 
    var1a <- paste(c(var1, ".fasta"), collapse = "") 
    var1 <- substr (NC_004003, start, end)
     assign("var1", var1, envir = .GlobalEnv) 
    write.dna (var1, file=var1a, format="fasta", append=F, nbcol=10, colsep="", colw=nchar(var1), indent = NULL)
  }
}

#function that creates a directory for the gene and renames the files for easier tree making
LDdir <- function(x, sample) {
if (x < 10 ) {
     gene <- paste(c("LD00", x), collapse = "")}
if (x >= 10 && x < 100){
    gene <- paste(c("LD0", x), collapse = "") }
if (x >= 100) {
    gene <- paste(c("LD", x), collapse = "")}

fasta <- paste(gene, sample, sep = "_")
fasta_ex <- paste(c(fasta, ".fasta"), collapse = "")

workdir <- file.path("/mnt/lustre/RDS-live/tobi/PHYLOGENY/phylo", gene)
if (dir.exists(workdir) == FALSE) {dir.create(workdir)}
assign("workdir", workdir, envir = .GlobalEnv)

fasta_file <- file.path(workdir, paste(c(fasta, ".fasta"), collapse = ""))

setwd("/mnt/lustre/RDS-live/tobi/PHYLOGENY/phylo")

file.move(fasta_ex, workdir, overwrite = TRUE)

setwd(workdir)

if (sample == "KX89") {
  file.create("KX894508.fasta")
  file.copy(from = fasta_ex, to = "KX894508.fasta", overwrite = TRUE)
  file.remove(fasta_file)
  } 

else if (sample == "KX76") {
  file.create("KX764645.fasta")
  file.copy(from = fasta_ex, to = "KX764645.fasta", overwrite = TRUE)
  file.remove(fasta_file)
  }

else if (sample == "OQ51") {
  file.create("OQ511520.fasta")
  file.copy(from = fasta_ex, to = "OQ511520.fasta", overwrite = TRUE)
  file.remove(fasta_file)
  }

else if (sample == "4002") {
  file.create("NC_004002.1.fasta")
  file.copy(from = fasta_ex, to = "NC_004002.1.fasta", overwrite = TRUE)
  file.remove(fasta_file)
  }

else if (sample == "4003") {
  file.create("NC_004003.1.fasta")
  file.copy(from = fasta_ex, to = "NC_004003.1.fasta", overwrite = TRUE)
  file.remove(fasta_file)
  }

}

#function for making a tree
LDtree <- function(x){
  if (x < 10 ) {
     name1 <- paste(c("LD00", x), collapse = "") 
    fastaconc(otus=c('KX894508', 'KX764645', 'OQ511520', 'NC_004002.1', 'NC_004003.1'), out.file=paste(c("./", name1, ".fasta"), collapse = ""))
  }
  if (x >= 10 && x < 100){
    name1 <- paste(c("LD0", x), collapse = "") 
    fastaconc(otus=c('KX894508', 'KX764645', 'OQ511520', 'NC_004002.1', 'NC_004003.1'), out.file=paste(c("./", name1, ".fasta"), collapse = ""))
  }
  if (x >= 100) {
    name1 <- paste(c("LD", x), collapse = "") 
    fastaconc(otus=c('KX894508', 'KX764645', 'OQ511520', 'NC_004002.1', 'NC_004003.1'), out.file=paste(c("./", name1, ".fasta"), collapse = ""))
  }

system2(command='/mnt/lustre/RDS-live/downing/miniconda3/bin/raxml-ng', args=c(' --all --msa ', paste0(name1, ".fasta"),'--model GTR+G4', '--prefix', paste0(name1, "--seed"), '21231 --bs-metric fbp,tbe --redo'))
tree <- read.tree(paste(c(name1, "--seed.raxml.supportTBE"), collapse = ""))
tree$node.label <- round(100*as.numeric(tree$node.label),0)
gg <- ggtree(midpoint.root(ladderize(tree))) + 
  geom_tiplab(hjust=0, size=2) +  geom_treescale(0,0)
pdf(paste(c(name1, ".pdf"), collapse = ""), height=4, width=9)
print(gg + coord_cartesian(clip='off') +
  theme_tree2(plot.margin=margin(8,40,8,8))  )
dev.off()

seed <- paste0(name1, "--seed.raxml.supportTBE")
file.copy(seed, "/mnt/lustre/RDS-live/tobi/PHYLOGENY/phylo/raxml")
setwd("/mnt/lustre/RDS-live/tobi/PHYLOGENY/phylo")

}

#collating everything into one pdf

names <- toString(list.files())
genes <- str_remove_all(names, '--seed.raxml.supportTBE')

a <- str_remove_all (names, ' ')
name <- strsplit(a, ",")
b <- unlist(name)
name <- strsplit(b, ",")

c <- str_remove_all (genes, ' ')
gene <- strsplit(c, ",")
d <- unlist(gene)
gene <- strsplit(d, ",")
iden <- sapply(gene, paste, collapse = " ")

parent_dir <- "/mnt/lustre/RDS-live/tobi/PHYLOGENY/phylo"
file_ids <- sprintf("%s", iden)
file_template <- "%s/%s/%s--seed.raxml.supportTBE"

# list to store data for all trees
tree_data_list <- list()

for (id in file_ids) {
  file_name <- sprintf(file_template, parent_dir, id, id)

  if (file.exists(file_name)) {
    tree <- read.tree(file_name)
    tree$node.label <- round(100 * as.numeric(tree$node.label), 0)
    ggtree_obj <- ggtree(midpoint.root(ladderize(tree)))
    tree_data <- ggtree_obj$data
    tree_data$file_id <- id
    tree_data_list[[id]] <- tree_data }
}


all_tree_data <- bind_rows(tree_data_list)
gg <- ggplot(all_tree_data, aes(x = x, y = y)) +  geom_tree() + 
  geom_tiplab(aes(label = label, fill = label), geom="label", hjust = 0, size = 2.5) + 
  geom_treescale(x = 0, y = -0.05) +
  theme_tree2(plot.margin = margin(8, 8, 8, 8)) +
  facet_wrap(~file_id, ncol = 13) +  theme(
        panel.spacing = unit(15, "pt")) + coord_cartesian(clip = 'off')

ggsave(filename="CaPPV_trees.pdf", plot=gg, scale= 1.125, width=50, height= 25, limitsize = FALSE)

#bash bit of code
mafft --thread 50 --auto 5.fasta > 5.aln 
samtools faidx 5.fasta    #index the sequence for pggb
pggb -i 5.fasta  -m -S -o CPPV -t 36 -p 90  -s 1k  -n 5    #create genome alignment map file uses 36 threads, 90% sequence identity threshold per 1 Kb with 5 sequences